{"remainingRequest":"F:\\md\\vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!F:\\md\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!F:\\md\\vuepress\\docs\\PEL_Develop\\notes\\变量类型.md?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\md\\vuepress\\docs\\PEL_Develop\\notes\\变量类型.md","mtime":1660272104941},{"path":"F:\\md\\vuepress\\node_modules\\css-loader\\dist\\cjs.js","mtime":1659699647276},{"path":"F:\\md\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1659699648008},{"path":"F:\\md\\vuepress\\node_modules\\postcss-loader\\src\\index.js","mtime":1659699647583},{"path":"F:\\md\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659699646795},{"path":"F:\\md\\vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1659699648008},{"path":"F:\\md\\vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1659922933683}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5xamJsewogICAgICAgIGZvbnQtc2l6ZToxM3B4OwogICAgfTsK"},{"version":3,"sources":["变量类型.md"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA","file":"变量类型.md","sourceRoot":"docs/PEL_Develop/notes","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><p>通俗的讲，变量就像是丰巢快递柜的格子，我们通过指定的格子空间存取物品（数据）；在金字塔的PEL中使用的变量类型，可以分成<code>普通变量</code>、<code>字符串变量</code>、<code>全局变量</code>三种。</p>\n<h2 id=\"普通变量\"><a class=\"header-anchor\" href=\"#普通变量\">#</a> 普通变量</h2>\n<p>在PEL中普通变量的定义非常简单，不需要指定变量的数据类型，直接定义变量即可使用。如下所示，定义MA1和MA2两个均线变量。</p>\n<!--beforebegin--><div class=\"language-autoit line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-autoit\"><code>MA1<span class=\"token operator\">:</span><span class=\"token function\">MA</span><span class=\"token punctuation\">(</span>CLOSE<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>;\nMA2<span class=\"token operator\">:</span><span class=\"token operator\">=</span><span class=\"token function\">MA</span><span class=\"token punctuation\">(</span>CLOSE<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><div class=\"tip_img_wrap\">\n　　<img src=\"../img/20220811111231.png\">\n</div>\n<p>通过公式观察，不难看出MA1通过冒号<code>:</code>进行定义，MA2通过冒号等号<code>:=</code>进行定义。两种变量定义的差别如下：</p>\n<div class=\"cardListContainer\"><div class=\"card-list\">\n      <span class=\"card-item row-2\"\n         style=\"background-color:#FFE7BA;--randomColor:#FFE7BA;color:#FF0000;\"\n      >\n        \n        <div>\n          <p class=\"name\">相同点</p>\n          <p class=\"desc\">1. 两者均可以直接定义新变量。</br>&nbsp;</p>\n        </div>\n      </span>\n    \n      <span class=\"card-item row-2\"\n         style=\"background-color:#FFE7BA;--randomColor:#FFE7BA;color:#FF0000;\"\n      >\n        \n        <div>\n          <p class=\"name\">不同点</p>\n          <p class=\"desc\">1. 通过\":=\"定义的变量，并不显示在k线图中。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </br>2. 只有\":=\"能够对已经定义的变量进行重新赋值。</p>\n        </div>\n      </span>\n    </div><!--beforebegin--><div class=\"language-yaml line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-yaml\"><code><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 相同点\n  <span class=\"token key atrule\">desc</span><span class=\"token punctuation\">:</span> 1. 两者均可以直接定义新变量。&lt;/br<span class=\"token punctuation\">></span><span class=\"token important\">&amp;nbsp;</span>\n  <span class=\"token key atrule\">bgColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FFE7BA'</span>\n  <span class=\"token key atrule\">textColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FF0000'</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 不同点\n  <span class=\"token key atrule\">desc</span><span class=\"token punctuation\">:</span> 1. 通过\"<span class=\"token punctuation\">:</span>=\"定义的变量，并不显示在k线图中。<span class=\"token important\">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span> &lt;/br<span class=\"token punctuation\">></span>2. 只有\"<span class=\"token punctuation\">:</span>=\"能够对已经定义的变量进行重新赋值。\n  <span class=\"token key atrule\">bgColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FFE7BA'</span>\n  <span class=\"token key atrule\">textColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FF0000'</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div><!--beforeend--></div><!--afterend--></div><div class=\"custom-block danger\"><p class=\"custom-block-title\">注意</p>\n<ul>\n<li>这里的普通变量亦可统称为序列变量。</li>\n</ul>\n</div>\n<h2 id=\"字符串变量\"><a class=\"header-anchor\" href=\"#字符串变量\">#</a> 字符串变量</h2>\n<p>字符串变量可以认为是普通变量的一种，因其数据为字符串类型，所以在此处被单独介绍说明。它的定义方式和普通变量定义方式相同。如下所示：</p>\n<!--beforebegin--><div class=\"language-autoit line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-autoit\"><code>str<span class=\"token operator\">:</span><span class=\"token string\">'helloWord'</span>;\ncode<span class=\"token operator\">:</span>STKLABEL;<span class=\"token comment\">//返回当前品种的代码</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>综上可知，字符串使用单引号<code>''</code>表示；也可以是返回值为字符串的函数。</p>\n<div class=\"custom-block danger\"><p class=\"custom-block-title\">注意</p>\n<ul>\n<li>字符串不支持直接在k线图中显示，因为k线图只能显示变量名和数值型变量。</li>\n<li>字符串显示可以通过EXPLAIN、DRAWTEXT、msgout等函数进行显示。</li>\n</ul>\n</div>\n<h2 id=\"全局变量\"><a class=\"header-anchor\" href=\"#全局变量\">#</a> 全局变量</h2>\n<p>全局变量是一种特殊变量，它的变量结果不会因为K线的改变而消失，我们可以认为全局变量的生命更长。PEL中提供多个全局变量的操作方法。其中VARIABLE和GLOBALVARIABLE是声明全局变量的关键字。声明方法如下所示：</p>\n<!--beforebegin--><div class=\"language-autoit line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-autoit\"><code><span class=\"token comment\">//声明全局变量A</span>\nVARIABLE<span class=\"token operator\">:</span>A<span class=\"token operator\">=</span><span class=\"token number\">0</span>;\n\n<span class=\"token comment\">//声明超全局变量B</span>\nGLOBALVARIABLE<span class=\"token operator\">:</span>B<span class=\"token operator\">=</span><span class=\"token number\">0</span>;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><div class=\"cardListContainer\"><div class=\"card-list\">\n      <span class=\"card-item row-2\"\n         style=\"background-color:#FFE7BA;--randomColor:#FFE7BA;color:#FF0000;\"\n      >\n        \n        <div>\n          <p class=\"name\">VARIABLE</p>\n          <p class=\"desc\">生命周期：首根k线到最后一根k线。&emsp;&emsp;&emsp;&nbsp;&nbsp;</br>初始化节点：只在首根k线上进行初始化。&emsp;</p>\n        </div>\n      </span>\n    \n      <span class=\"card-item row-2\"\n         style=\"background-color:#FFE7BA;--randomColor:#FFE7BA;color:#FF0000;\"\n      >\n        \n        <div>\n          <p class=\"name\">GLOBALVARIABLE</p>\n          <p class=\"desc\">生命周期：指标加载至停止运行期间。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</br>初始化节点：只在指标加载时对超全局变量定义的语句进行一次初始化。</p>\n        </div>\n      </span>\n    </div><!--beforebegin--><div class=\"language-yaml line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-yaml\"><code><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> VARIABLE\n  <span class=\"token key atrule\">desc</span><span class=\"token punctuation\">:</span> 生命周期：首根k线到最后一根k线。<span class=\"token important\">&amp;emsp;&amp;emsp;&amp;emsp;&amp;nbsp;&amp;nbsp;&lt;/br>初始化节点：只在首根k线上进行初始化。&amp;emsp;</span>\n  <span class=\"token key atrule\">bgColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FFE7BA'</span>\n  <span class=\"token key atrule\">textColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FF0000'</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GLOBALVARIABLE\n  <span class=\"token key atrule\">desc</span><span class=\"token punctuation\">:</span> 生命周期：指标加载至停止运行期间。<span class=\"token important\">&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/br>初始化节点：只在指标加载时对超全局变量定义的语句进行一次初始化。</span>\n  <span class=\"token key atrule\">bgColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FFE7BA'</span>\n  <span class=\"token key atrule\">textColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#FF0000'</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div><!--beforeend--></div><!--afterend--></div><ul>\n<li>除上述两种全局变量外，金字塔还提供了EXT全局变量，它是类似文件记录的全局变量，并且没有历史值，因此只适合在后台策略中使用。ext全局变量不同于前面两种，它不需要初始化，数据的更新读取均通过相应的函数操作即可。它可以实现在整个金字塔中，多个后台策略之间进行数据交互。</li>\n</ul>\n<details class=\"custom-block details\"><summary>变量对比说明</summary>\n<table>\n<tr>\n    <th width=\"80\" >变量标识</th>\n    <th width=\"90\" >名称类型</th>\n    <th width=\"130\" >作用范围</th>\n    <th >解析</th>\n</tr>\n<tr >\n    <td class=\"qjbl\">无</td>\n    <td class=\"qjbl\">普通变量</td>\n    <td class=\"qjbl\">单根K线</td>\n    <td class=\"qjbl\">只在当根K线生效，当指标换到下一根K线进行计算时就会被再次初始化。</td>\n</tr>\n<tr>\n    <td class=\"qjbl\" >VARIABLE</td>\n    <td class=\"qjbl\" >全局变量</td>\n    <td class=\"qjbl\" >首根K至最后一根k线</td>\n    <td class=\"qjbl\" >指标加载后，定义语句在第一根K线处初始化为设定值，后面的K线调用此全局变量计算时，调用到的值是上一根K线计算的返回值。当行情更新，指标重新刷新时，那么此变量又会在第一根K线处被定义语句初始化。</td>\n</tr>\n<tr>\n    <td class=\"qjbl\">GLOBALVARIABLE</td>\n    <td class=\"qjbl\">超全局变量</td>\n    <td class=\"qjbl\">指标加载至停止运行期间</td>\n    <td class=\"qjbl\">指标加载时对全局变量定义的语句进行一次初始化，之后定义语句都不会再对其初行初始化直至停止运行指标。</td>\n</tr>\n<tr>\n    <td class=\"qjbl\">EXTGBDATA</td>\n    <td class=\"qjbl\">单值全局变量</td>\n    <td class=\"qjbl\">整个金字塔软件范围内</td>\n    <td class=\"qjbl\">设置了初始值之后，只要是在金字塔软件范围内，任意的指标、手工或者其他方式都可软修改它的值，并且在整个软件范围内共享这个值。因此，它不存在绝对意义的初始化。</td>\n</tr>\n<tr>\n    <td class=\"qjbl\">SETREGVAL</td>\n    <td class=\"qjbl\">注册表全局变量</td>\n    <td class=\"qjbl\">整个计算机范围内</td>\n    <td class=\"qjbl\">将变量存储机注册表中，因此在整都计算机内都可以调用这个值。</td>\n</tr>\n<tr>\n    <td class=\"qjbl\">WRITEINIFILE</td>\n    <td class=\"qjbl\"> 写配置文件</td>\n    <td class=\"qjbl\">整个计算机范围内</td>\n    <td class=\"qjbl\"> 将变量存储在本地配置文件内，因此在整都计算机内都可以该配置文件调用这个值。</td>\n</tr>\n</table>\n</details>\n<h2 id=\"变量与k线的关系\"><a class=\"header-anchor\" href=\"#变量与k线的关系\">#</a> 变量与K线的关系</h2>\n<p>本节只围绕普通变量、VARIABLE、GLOBALVARIABLE三者与K线之间的关系进行分析。希望可以帮助大家进一步理解全局变量的特性。策略</p>\n</ContentSlotsDistributor>\n</template>\n<style>\n    .qjbl{\n            font-size:13px;\n        };\n</style>\n\n\n"]}]}